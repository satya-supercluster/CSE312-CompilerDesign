digraph G {
ordering=out
node1 [label= "file_input"]
node64 [label= "if_stmt"]
node2 [label= "KEYWORD(if)", shape = rectangle, color = green]
node4 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node3 [label= "NAME(__name__)", shape = rectangle, color = red]
node5 [label= "STRING_LITERAL(\"__main__\")", shape = rectangle, color = orange]
node6 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node42 [label= "stmts"]
node33 [label= "annassign"]
node7 [label= "NAME(arr)", shape = rectangle, color = red]
node8 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node14 [label= "atom_expr"]
node9 [label= "TYPE NAME(list)", shape = rectangle, color = cyan]
node13 [label= "trailer"]
node10 [label= "DELIMITER([)", shape = rectangle, color = blue]
node11 [label= "TYPE NAME(int)", shape = rectangle, color = cyan]
node12 [label= "DELIMITER(])", shape = rectangle, color = blue]
node32 [label= "param_val"]
node15 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node31 [label= "atom"]
node16 [label= "DELIMITER([)", shape = rectangle, color = blue]
node30 [label= "testlist_comp"]
node17 [label= "NUMBER(9)", shape = rectangle, color = pink]
node18 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node19 [label= "NUMBER(3)", shape = rectangle, color = pink]
node20 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node22 [label= "NUMBER(4)", shape = rectangle, color = pink]
node23 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node24 [label= "NUMBER(2)", shape = rectangle, color = pink]
node25 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node26 [label= "NUMBER(1)", shape = rectangle, color = pink]
node27 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node28 [label= "NUMBER(8)", shape = rectangle, color = pink]
node29 [label= "DELIMITER(])", shape = rectangle, color = blue]
node41 [label= "annassign"]
node34 [label= "NAME(max)", shape = rectangle, color = red]
node35 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node36 [label= "TYPE NAME(int)", shape = rectangle, color = cyan]
node40 [label= "param_val"]
node37 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node38 [label= "OPERATOR(-)", shape = rectangle, color = purple]
node39 [label= "NUMBER(1)", shape = rectangle, color = pink]
node58 [label= "for_stmt"]
node43 [label= "KEYWORD(for)", shape = rectangle, color = green]
node44 [label= "NAME(i)", shape = rectangle, color = red]
node45 [label= "KEYWORD(in)", shape = rectangle, color = green]
node46 [label= "NAME(arr)", shape = rectangle, color = red]
node47 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node56 [label= "if_stmt"]
node48 [label= "KEYWORD(if)", shape = rectangle, color = green]
node50 [label= "OPERATOR(>)", shape = rectangle, color = purple]
node49 [label= "NAME(i)", shape = rectangle, color = red]
node51 [label= "NAME(max)", shape = rectangle, color = red]
node52 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node54 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node53 [label= "NAME(max)", shape = rectangle, color = red]
node55 [label= "NAME(i)", shape = rectangle, color = red]
node63 [label= "atom_expr"]
node57 [label= "NAME(print)", shape = rectangle, color = red]
node62 [label= "trailer"]
node59 [label= "DELIMITER(()", shape = rectangle, color = blue]
node60 [label= "NAME(max)", shape = rectangle, color = red]
node61 [label= "DELIMITER())", shape = rectangle, color = blue]
node1 -> node64;
node64 -> node2;
node64 -> node4;
node4 -> node3;
node4 -> node5;
node64 -> node6;
node64 -> node42;
node42 -> node33;
node33 -> node7;
node33 -> node8;
node33 -> node14;
node14 -> node9;
node14 -> node13;
node13 -> node10;
node13 -> node11;
node13 -> node12;
node33 -> node32;
node32 -> node15;
node32 -> node31;
node31 -> node16;
node31 -> node30;
node30 -> node17;
node30 -> node18;
node30 -> node19;
node30 -> node20;
node30 -> node22;
node30 -> node23;
node30 -> node24;
node30 -> node25;
node30 -> node26;
node30 -> node27;
node30 -> node28;
node31 -> node29;
node42 -> node41;
node41 -> node34;
node41 -> node35;
node41 -> node36;
node41 -> node40;
node40 -> node37;
node40 -> node38;
node38 -> node39;
node42 -> node58;
node58 -> node43;
node58 -> node44;
node58 -> node45;
node58 -> node46;
node58 -> node47;
node58 -> node56;
node56 -> node48;
node56 -> node50;
node50 -> node49;
node50 -> node51;
node56 -> node52;
node56 -> node54;
node54 -> node53;
node54 -> node55;
node42 -> node63;
node63 -> node57;
node63 -> node62;
node62 -> node59;
node62 -> node60;
node62 -> node61;
}
