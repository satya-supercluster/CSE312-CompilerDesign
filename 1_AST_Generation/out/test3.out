digraph G {
ordering=out
node1 [label= "file_input"]
node767 [label= "classdef"]
node2 [label= "KEYWORD(class)", shape = rectangle, color = green]
node3 [label= "IDENTIFIER(Solution)", shape = rectangle, color = red]
node4 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node108 [label= "stmts"]
node24 [label= "funcdef"]
node5 [label= "KEYWORD(def)", shape = rectangle, color = green]
node6 [label= "IDENTIFIER(__init__)", shape = rectangle, color = red]
node11 [label= "parameters"]
node7 [label= "DELIMITER(()", shape = rectangle, color = blue]
node10 [label= "formal_param"]
node8 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node9 [label= "DELIMITER())", shape = rectangle, color = blue]
node12 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node23 [label= "annassign"]
node17 [label= "atom_expr"]
node13 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node16 [label= "trailer"]
node14 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node15 [label= "IDENTIFIER(name)", shape = rectangle, color = red]
node18 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node19 [label= "DATA TYPE(str)", shape = rectangle, color = cyan]
node22 [label= "param_val"]
node20 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node21 [label= "STRING_LITERAL(\"mySudoku\")", shape = rectangle, color = orange]
node107 [label= "funcdef"]
node25 [label= "KEYWORD(def)", shape = rectangle, color = green]
node26 [label= "IDENTIFIER(printGrid)", shape = rectangle, color = red]
node49 [label= "parameters"]
node27 [label= "DELIMITER(()", shape = rectangle, color = blue]
node48 [label= "typedargslist"]
node30 [label= "formal_param"]
node28 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node29 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node46 [label= "formal_param"]
node31 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node45 [label= "param_type_hint"]
node32 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node43 [label= "atom_expr"]
node33 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node42 [label= "trailer"]
node34 [label= "DELIMITER([)", shape = rectangle, color = blue]
node40 [label= "atom_expr"]
node35 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node39 [label= "trailer"]
node36 [label= "DELIMITER([)", shape = rectangle, color = blue]
node37 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node38 [label= "DELIMITER(])", shape = rectangle, color = blue]
node41 [label= "DELIMITER(])", shape = rectangle, color = blue]
node44 [label= "DELIMITER())", shape = rectangle, color = blue]
node53 [label= "return_type_hint"]
node50 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node51 [label= "KEYWORD(None)", shape = rectangle, color = green]
node52 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node62 [label= "stmts"]
node57 [label= "annassign"]
node54 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node55 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node56 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node61 [label= "annassign"]
node58 [label= "IDENTIFIER(j)", shape = rectangle, color = red]
node59 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node60 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node106 [label= "for_stmt"]
node63 [label= "KEYWORD(for)", shape = rectangle, color = green]
node64 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node65 [label= "KEYWORD(in)", shape = rectangle, color = green]
node71 [label= "atom_expr"]
node66 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node70 [label= "trailer"]
node67 [label= "DELIMITER(()", shape = rectangle, color = blue]
node68 [label= "NUMBER(9)", shape = rectangle, color = pink]
node69 [label= "DELIMITER())", shape = rectangle, color = blue]
node72 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node105 [label= "stmts"]
node99 [label= "for_stmt"]
node73 [label= "KEYWORD(for)", shape = rectangle, color = green]
node74 [label= "IDENTIFIER(j)", shape = rectangle, color = red]
node75 [label= "KEYWORD(in)", shape = rectangle, color = green]
node81 [label= "atom_expr"]
node76 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node80 [label= "trailer"]
node77 [label= "DELIMITER(()", shape = rectangle, color = blue]
node78 [label= "NUMBER(9)", shape = rectangle, color = pink]
node79 [label= "DELIMITER())", shape = rectangle, color = blue]
node82 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node97 [label= "atom_expr"]
node83 [label= "IDENTIFIER(print)", shape = rectangle, color = red]
node96 [label= "trailer"]
node84 [label= "DELIMITER(()", shape = rectangle, color = blue]
node90 [label= "atom_expr"]
node85 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node89 [label= "trailer"]
node86 [label= "DELIMITER([)", shape = rectangle, color = blue]
node87 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node88 [label= "DELIMITER(])", shape = rectangle, color = blue]
node94 [label= "trailer"]
node91 [label= "DELIMITER([)", shape = rectangle, color = blue]
node92 [label= "IDENTIFIER(j)", shape = rectangle, color = red]
node93 [label= "DELIMITER(])", shape = rectangle, color = blue]
node95 [label= "DELIMITER())", shape = rectangle, color = blue]
node104 [label= "atom_expr"]
node98 [label= "IDENTIFIER(print)", shape = rectangle, color = red]
node103 [label= "trailer"]
node100 [label= "DELIMITER(()", shape = rectangle, color = blue]
node101 [label= "STRING_LITERAL(\"\")", shape = rectangle, color = orange]
node102 [label= "DELIMITER())", shape = rectangle, color = blue]
node187 [label= "funcdef"]
node109 [label= "KEYWORD(def)", shape = rectangle, color = green]
node110 [label= "IDENTIFIER(used_in_row)", shape = rectangle, color = red]
node145 [label= "parameters"]
node111 [label= "DELIMITER(()", shape = rectangle, color = blue]
node144 [label= "typedargslist"]
node114 [label= "formal_param"]
node112 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node113 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node130 [label= "formal_param"]
node115 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node129 [label= "param_type_hint"]
node116 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node127 [label= "atom_expr"]
node117 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node126 [label= "trailer"]
node118 [label= "DELIMITER([)", shape = rectangle, color = blue]
node124 [label= "atom_expr"]
node119 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node123 [label= "trailer"]
node120 [label= "DELIMITER([)", shape = rectangle, color = blue]
node121 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node122 [label= "DELIMITER(])", shape = rectangle, color = blue]
node125 [label= "DELIMITER(])", shape = rectangle, color = blue]
node128 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node137 [label= "formal_param"]
node132 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node136 [label= "param_type_hint"]
node133 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node134 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node135 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node143 [label= "formal_param"]
node138 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node142 [label= "param_type_hint"]
node139 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node140 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node141 [label= "DELIMITER())", shape = rectangle, color = blue]
node149 [label= "return_type_hint"]
node146 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node147 [label= "DATA TYPE(bool)", shape = rectangle, color = cyan]
node148 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node184 [label= "stmts"]
node153 [label= "annassign"]
node150 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node151 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node152 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node183 [label= "for_stmt"]
node154 [label= "KEYWORD(for)", shape = rectangle, color = green]
node155 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node156 [label= "KEYWORD(in)", shape = rectangle, color = green]
node162 [label= "atom_expr"]
node157 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node161 [label= "trailer"]
node158 [label= "DELIMITER(()", shape = rectangle, color = blue]
node159 [label= "NUMBER(9)", shape = rectangle, color = pink]
node160 [label= "DELIMITER())", shape = rectangle, color = blue]
node163 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node181 [label= "if_stmt"]
node164 [label= "KEYWORD(if)", shape = rectangle, color = green]
node175 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node170 [label= "atom_expr"]
node165 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node169 [label= "trailer"]
node166 [label= "DELIMITER([)", shape = rectangle, color = blue]
node167 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node168 [label= "DELIMITER(])", shape = rectangle, color = blue]
node174 [label= "trailer"]
node171 [label= "DELIMITER([)", shape = rectangle, color = blue]
node172 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node173 [label= "DELIMITER(])", shape = rectangle, color = blue]
node176 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node177 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node180 [label= "return_stmt"]
node178 [label= "KEYWORD(return)", shape = rectangle, color = green]
node179 [label= "KEYWORD(True)", shape = rectangle, color = green]
node186 [label= "return_stmt"]
node182 [label= "KEYWORD(return)", shape = rectangle, color = green]
node185 [label= "KEYWORD(False)", shape = rectangle, color = green]
node266 [label= "funcdef"]
node188 [label= "KEYWORD(def)", shape = rectangle, color = green]
node189 [label= "IDENTIFIER(used_in_col)", shape = rectangle, color = red]
node224 [label= "parameters"]
node190 [label= "DELIMITER(()", shape = rectangle, color = blue]
node223 [label= "typedargslist"]
node193 [label= "formal_param"]
node191 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node192 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node209 [label= "formal_param"]
node194 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node208 [label= "param_type_hint"]
node195 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node206 [label= "atom_expr"]
node196 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node205 [label= "trailer"]
node197 [label= "DELIMITER([)", shape = rectangle, color = blue]
node203 [label= "atom_expr"]
node198 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node202 [label= "trailer"]
node199 [label= "DELIMITER([)", shape = rectangle, color = blue]
node200 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node201 [label= "DELIMITER(])", shape = rectangle, color = blue]
node204 [label= "DELIMITER(])", shape = rectangle, color = blue]
node207 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node216 [label= "formal_param"]
node211 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node215 [label= "param_type_hint"]
node212 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node213 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node214 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node222 [label= "formal_param"]
node217 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node221 [label= "param_type_hint"]
node218 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node219 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node220 [label= "DELIMITER())", shape = rectangle, color = blue]
node228 [label= "return_type_hint"]
node225 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node226 [label= "DATA TYPE(bool)", shape = rectangle, color = cyan]
node227 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node263 [label= "stmts"]
node232 [label= "annassign"]
node229 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node230 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node231 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node262 [label= "for_stmt"]
node233 [label= "KEYWORD(for)", shape = rectangle, color = green]
node234 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node235 [label= "KEYWORD(in)", shape = rectangle, color = green]
node241 [label= "atom_expr"]
node236 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node240 [label= "trailer"]
node237 [label= "DELIMITER(()", shape = rectangle, color = blue]
node238 [label= "NUMBER(9)", shape = rectangle, color = pink]
node239 [label= "DELIMITER())", shape = rectangle, color = blue]
node242 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node260 [label= "if_stmt"]
node243 [label= "KEYWORD(if)", shape = rectangle, color = green]
node254 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node249 [label= "atom_expr"]
node244 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node248 [label= "trailer"]
node245 [label= "DELIMITER([)", shape = rectangle, color = blue]
node246 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node247 [label= "DELIMITER(])", shape = rectangle, color = blue]
node253 [label= "trailer"]
node250 [label= "DELIMITER([)", shape = rectangle, color = blue]
node251 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node252 [label= "DELIMITER(])", shape = rectangle, color = blue]
node255 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node256 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node259 [label= "return_stmt"]
node257 [label= "KEYWORD(return)", shape = rectangle, color = green]
node258 [label= "KEYWORD(True)", shape = rectangle, color = green]
node265 [label= "return_stmt"]
node261 [label= "KEYWORD(return)", shape = rectangle, color = green]
node264 [label= "KEYWORD(False)", shape = rectangle, color = green]
node370 [label= "funcdef"]
node267 [label= "KEYWORD(def)", shape = rectangle, color = green]
node268 [label= "IDENTIFIER(used_in_box)", shape = rectangle, color = red]
node309 [label= "parameters"]
node269 [label= "DELIMITER(()", shape = rectangle, color = blue]
node308 [label= "typedargslist"]
node272 [label= "formal_param"]
node270 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node271 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node288 [label= "formal_param"]
node273 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node287 [label= "param_type_hint"]
node274 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node285 [label= "atom_expr"]
node275 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node284 [label= "trailer"]
node276 [label= "DELIMITER([)", shape = rectangle, color = blue]
node282 [label= "atom_expr"]
node277 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node281 [label= "trailer"]
node278 [label= "DELIMITER([)", shape = rectangle, color = blue]
node279 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node280 [label= "DELIMITER(])", shape = rectangle, color = blue]
node283 [label= "DELIMITER(])", shape = rectangle, color = blue]
node286 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node295 [label= "formal_param"]
node290 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node294 [label= "param_type_hint"]
node291 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node292 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node293 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node301 [label= "formal_param"]
node296 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node300 [label= "param_type_hint"]
node297 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node298 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node299 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node307 [label= "formal_param"]
node302 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node306 [label= "param_type_hint"]
node303 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node304 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node305 [label= "DELIMITER())", shape = rectangle, color = blue]
node313 [label= "return_type_hint"]
node310 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node311 [label= "DATA TYPE(bool)", shape = rectangle, color = cyan]
node312 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node322 [label= "stmts"]
node317 [label= "annassign"]
node314 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node315 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node316 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node321 [label= "annassign"]
node318 [label= "IDENTIFIER(j)", shape = rectangle, color = red]
node319 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node320 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node367 [label= "for_stmt"]
node323 [label= "KEYWORD(for)", shape = rectangle, color = green]
node324 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node325 [label= "KEYWORD(in)", shape = rectangle, color = green]
node331 [label= "atom_expr"]
node326 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node330 [label= "trailer"]
node327 [label= "DELIMITER(()", shape = rectangle, color = blue]
node328 [label= "NUMBER(3)", shape = rectangle, color = pink]
node329 [label= "DELIMITER())", shape = rectangle, color = blue]
node332 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node365 [label= "for_stmt"]
node333 [label= "KEYWORD(for)", shape = rectangle, color = green]
node334 [label= "IDENTIFIER(j)", shape = rectangle, color = red]
node335 [label= "KEYWORD(in)", shape = rectangle, color = green]
node341 [label= "atom_expr"]
node336 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node340 [label= "trailer"]
node337 [label= "DELIMITER(()", shape = rectangle, color = blue]
node338 [label= "NUMBER(3)", shape = rectangle, color = pink]
node339 [label= "DELIMITER())", shape = rectangle, color = blue]
node342 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node364 [label= "if_stmt"]
node343 [label= "KEYWORD(if)", shape = rectangle, color = green]
node358 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node351 [label= "atom_expr"]
node344 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node350 [label= "trailer"]
node345 [label= "DELIMITER([)", shape = rectangle, color = blue]
node347 [label= "OPERATOR(+)", shape = rectangle, color = purple]
node346 [label= "IDENTIFIER(i)", shape = rectangle, color = red]
node348 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node349 [label= "DELIMITER(])", shape = rectangle, color = blue]
node357 [label= "trailer"]
node352 [label= "DELIMITER([)", shape = rectangle, color = blue]
node354 [label= "OPERATOR(+)", shape = rectangle, color = purple]
node353 [label= "IDENTIFIER(j)", shape = rectangle, color = red]
node355 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node356 [label= "DELIMITER(])", shape = rectangle, color = blue]
node359 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node360 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node363 [label= "return_stmt"]
node361 [label= "KEYWORD(return)", shape = rectangle, color = green]
node362 [label= "KEYWORD(True)", shape = rectangle, color = green]
node369 [label= "return_stmt"]
node366 [label= "KEYWORD(return)", shape = rectangle, color = green]
node368 [label= "KEYWORD(False)", shape = rectangle, color = green]
node480 [label= "funcdef"]
node371 [label= "KEYWORD(def)", shape = rectangle, color = green]
node372 [label= "IDENTIFIER(check_location_is_safe)", shape = rectangle, color = red]
node413 [label= "parameters"]
node373 [label= "DELIMITER(()", shape = rectangle, color = blue]
node412 [label= "typedargslist"]
node376 [label= "formal_param"]
node374 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node375 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node392 [label= "formal_param"]
node377 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node391 [label= "param_type_hint"]
node378 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node389 [label= "atom_expr"]
node379 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node388 [label= "trailer"]
node380 [label= "DELIMITER([)", shape = rectangle, color = blue]
node386 [label= "atom_expr"]
node381 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node385 [label= "trailer"]
node382 [label= "DELIMITER([)", shape = rectangle, color = blue]
node383 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node384 [label= "DELIMITER(])", shape = rectangle, color = blue]
node387 [label= "DELIMITER(])", shape = rectangle, color = blue]
node390 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node399 [label= "formal_param"]
node394 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node398 [label= "param_type_hint"]
node395 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node396 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node397 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node405 [label= "formal_param"]
node400 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node404 [label= "param_type_hint"]
node401 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node402 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node403 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node411 [label= "formal_param"]
node406 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node410 [label= "param_type_hint"]
node407 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node408 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node409 [label= "DELIMITER())", shape = rectangle, color = blue]
node417 [label= "return_type_hint"]
node414 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node415 [label= "DATA TYPE(bool)", shape = rectangle, color = cyan]
node416 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node479 [label= "return_stmt"]
node418 [label= "KEYWORD(return)", shape = rectangle, color = green]
node452 [label= "OPERATOR(and)", shape = rectangle, color = purple]
node435 [label= "OPERATOR(and)", shape = rectangle, color = purple]
node419 [label= "OPERATOR(not)", shape = rectangle, color = purple]
node424 [label= "atom_expr"]
node420 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node423 [label= "trailer"]
node421 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node422 [label= "IDENTIFIER(used_in_row)", shape = rectangle, color = red]
node434 [label= "trailer"]
node425 [label= "DELIMITER(()", shape = rectangle, color = blue]
node433 [label= "arglist"]
node426 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node427 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node428 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node429 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node431 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node432 [label= "DELIMITER())", shape = rectangle, color = blue]
node436 [label= "OPERATOR(not)", shape = rectangle, color = purple]
node441 [label= "atom_expr"]
node437 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node440 [label= "trailer"]
node438 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node439 [label= "IDENTIFIER(used_in_col)", shape = rectangle, color = red]
node451 [label= "trailer"]
node442 [label= "DELIMITER(()", shape = rectangle, color = blue]
node450 [label= "arglist"]
node443 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node444 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node445 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node446 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node448 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node449 [label= "DELIMITER())", shape = rectangle, color = blue]
node453 [label= "OPERATOR(not)", shape = rectangle, color = purple]
node458 [label= "atom_expr"]
node454 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node457 [label= "trailer"]
node455 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node456 [label= "IDENTIFIER(used_in_box)", shape = rectangle, color = red]
node478 [label= "trailer"]
node459 [label= "DELIMITER(()", shape = rectangle, color = blue]
node477 [label= "arglist"]
node460 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node461 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node463 [label= "OPERATOR(-)", shape = rectangle, color = purple]
node462 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node465 [label= "OPERATOR(%)", shape = rectangle, color = purple]
node464 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node466 [label= "NUMBER(3)", shape = rectangle, color = pink]
node467 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node470 [label= "OPERATOR(-)", shape = rectangle, color = purple]
node469 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node472 [label= "OPERATOR(%)", shape = rectangle, color = purple]
node471 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node473 [label= "NUMBER(3)", shape = rectangle, color = pink]
node474 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node475 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node476 [label= "DELIMITER())", shape = rectangle, color = blue]
node590 [label= "funcdef"]
node481 [label= "KEYWORD(def)", shape = rectangle, color = green]
node482 [label= "IDENTIFIER(find_empty_location)", shape = rectangle, color = red]
node516 [label= "parameters"]
node483 [label= "DELIMITER(()", shape = rectangle, color = blue]
node515 [label= "typedargslist"]
node486 [label= "formal_param"]
node484 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node485 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node502 [label= "formal_param"]
node487 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node501 [label= "param_type_hint"]
node488 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node499 [label= "atom_expr"]
node489 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node498 [label= "trailer"]
node490 [label= "DELIMITER([)", shape = rectangle, color = blue]
node496 [label= "atom_expr"]
node491 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node495 [label= "trailer"]
node492 [label= "DELIMITER([)", shape = rectangle, color = blue]
node493 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node494 [label= "DELIMITER(])", shape = rectangle, color = blue]
node497 [label= "DELIMITER(])", shape = rectangle, color = blue]
node500 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node514 [label= "formal_param"]
node504 [label= "IDENTIFIER(l)", shape = rectangle, color = red]
node513 [label= "param_type_hint"]
node505 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node511 [label= "atom_expr"]
node506 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node510 [label= "trailer"]
node507 [label= "DELIMITER([)", shape = rectangle, color = blue]
node508 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node509 [label= "DELIMITER(])", shape = rectangle, color = blue]
node512 [label= "DELIMITER())", shape = rectangle, color = blue]
node520 [label= "return_type_hint"]
node517 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node518 [label= "DATA TYPE(bool)", shape = rectangle, color = cyan]
node519 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node529 [label= "stmts"]
node524 [label= "annassign"]
node521 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node522 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node523 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node528 [label= "annassign"]
node525 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node526 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node527 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node587 [label= "for_stmt"]
node530 [label= "KEYWORD(for)", shape = rectangle, color = green]
node531 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node532 [label= "KEYWORD(in)", shape = rectangle, color = green]
node538 [label= "atom_expr"]
node533 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node537 [label= "trailer"]
node534 [label= "DELIMITER(()", shape = rectangle, color = blue]
node535 [label= "NUMBER(9)", shape = rectangle, color = pink]
node536 [label= "DELIMITER())", shape = rectangle, color = blue]
node539 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node585 [label= "for_stmt"]
node540 [label= "KEYWORD(for)", shape = rectangle, color = green]
node541 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node542 [label= "KEYWORD(in)", shape = rectangle, color = green]
node548 [label= "atom_expr"]
node543 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node547 [label= "trailer"]
node544 [label= "DELIMITER(()", shape = rectangle, color = blue]
node545 [label= "NUMBER(9)", shape = rectangle, color = pink]
node546 [label= "DELIMITER())", shape = rectangle, color = blue]
node549 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node584 [label= "if_stmt"]
node550 [label= "KEYWORD(if)", shape = rectangle, color = green]
node561 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node556 [label= "atom_expr"]
node551 [label= "IDENTIFIER(arr)", shape = rectangle, color = red]
node555 [label= "trailer"]
node552 [label= "DELIMITER([)", shape = rectangle, color = blue]
node553 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node554 [label= "DELIMITER(])", shape = rectangle, color = blue]
node560 [label= "trailer"]
node557 [label= "DELIMITER([)", shape = rectangle, color = blue]
node558 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node559 [label= "DELIMITER(])", shape = rectangle, color = blue]
node562 [label= "NUMBER(0)", shape = rectangle, color = pink]
node563 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node580 [label= "stmts"]
node570 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node569 [label= "atom_expr"]
node564 [label= "IDENTIFIER(l)", shape = rectangle, color = red]
node568 [label= "trailer"]
node565 [label= "DELIMITER([)", shape = rectangle, color = blue]
node566 [label= "NUMBER(0)", shape = rectangle, color = pink]
node567 [label= "DELIMITER(])", shape = rectangle, color = blue]
node571 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node578 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node577 [label= "atom_expr"]
node572 [label= "IDENTIFIER(l)", shape = rectangle, color = red]
node576 [label= "trailer"]
node573 [label= "DELIMITER([)", shape = rectangle, color = blue]
node574 [label= "NUMBER(1)", shape = rectangle, color = pink]
node575 [label= "DELIMITER(])", shape = rectangle, color = blue]
node579 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node583 [label= "return_stmt"]
node581 [label= "KEYWORD(return)", shape = rectangle, color = green]
node582 [label= "KEYWORD(True)", shape = rectangle, color = green]
node589 [label= "return_stmt"]
node586 [label= "KEYWORD(return)", shape = rectangle, color = green]
node588 [label= "KEYWORD(False)", shape = rectangle, color = green]
node766 [label= "funcdef"]
node591 [label= "KEYWORD(def)", shape = rectangle, color = green]
node592 [label= "IDENTIFIER(SolveSudoku)", shape = rectangle, color = red]
node615 [label= "parameters"]
node593 [label= "DELIMITER(()", shape = rectangle, color = blue]
node614 [label= "typedargslist"]
node596 [label= "formal_param"]
node594 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node595 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node612 [label= "formal_param"]
node597 [label= "IDENTIFIER(grid)", shape = rectangle, color = red]
node611 [label= "param_type_hint"]
node598 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node609 [label= "atom_expr"]
node599 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node608 [label= "trailer"]
node600 [label= "DELIMITER([)", shape = rectangle, color = blue]
node606 [label= "atom_expr"]
node601 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node605 [label= "trailer"]
node602 [label= "DELIMITER([)", shape = rectangle, color = blue]
node603 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node604 [label= "DELIMITER(])", shape = rectangle, color = blue]
node607 [label= "DELIMITER(])", shape = rectangle, color = blue]
node610 [label= "DELIMITER())", shape = rectangle, color = blue]
node619 [label= "return_type_hint"]
node616 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node617 [label= "DATA TYPE(bool)", shape = rectangle, color = cyan]
node618 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node660 [label= "stmts"]
node638 [label= "annassign"]
node620 [label= "IDENTIFIER(l)", shape = rectangle, color = red]
node621 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node627 [label= "atom_expr"]
node622 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node626 [label= "trailer"]
node623 [label= "DELIMITER([)", shape = rectangle, color = blue]
node624 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node625 [label= "DELIMITER(])", shape = rectangle, color = blue]
node637 [label= "param_val"]
node628 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node636 [label= "atom"]
node629 [label= "DELIMITER([)", shape = rectangle, color = blue]
node635 [label= "testlist_comp"]
node630 [label= "NUMBER(0)", shape = rectangle, color = pink]
node631 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node632 [label= "NUMBER(0)", shape = rectangle, color = pink]
node633 [label= "DELIMITER(])", shape = rectangle, color = blue]
node659 [label= "if_stmt"]
node639 [label= "KEYWORD(if)", shape = rectangle, color = green]
node640 [label= "OPERATOR(not)", shape = rectangle, color = purple]
node645 [label= "atom_expr"]
node641 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node644 [label= "trailer"]
node642 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node643 [label= "IDENTIFIER(find_empty_location)", shape = rectangle, color = red]
node653 [label= "trailer"]
node646 [label= "DELIMITER(()", shape = rectangle, color = blue]
node652 [label= "arglist"]
node647 [label= "IDENTIFIER(grid)", shape = rectangle, color = red]
node648 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node649 [label= "IDENTIFIER(l)", shape = rectangle, color = red]
node650 [label= "DELIMITER())", shape = rectangle, color = blue]
node654 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node657 [label= "return_stmt"]
node655 [label= "KEYWORD(return)", shape = rectangle, color = green]
node656 [label= "KEYWORD(True)", shape = rectangle, color = green]
node671 [label= "annassign"]
node658 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node661 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node662 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node670 [label= "param_val"]
node663 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node669 [label= "atom_expr"]
node664 [label= "IDENTIFIER(l)", shape = rectangle, color = red]
node668 [label= "trailer"]
node665 [label= "DELIMITER([)", shape = rectangle, color = blue]
node666 [label= "NUMBER(0)", shape = rectangle, color = pink]
node667 [label= "DELIMITER(])", shape = rectangle, color = blue]
node683 [label= "annassign"]
node672 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node673 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node674 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node682 [label= "param_val"]
node675 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node681 [label= "atom_expr"]
node676 [label= "IDENTIFIER(l)", shape = rectangle, color = red]
node680 [label= "trailer"]
node677 [label= "DELIMITER([)", shape = rectangle, color = blue]
node678 [label= "NUMBER(1)", shape = rectangle, color = pink]
node679 [label= "DELIMITER(])", shape = rectangle, color = blue]
node687 [label= "annassign"]
node684 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node685 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node686 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node763 [label= "for_stmt"]
node688 [label= "KEYWORD(for)", shape = rectangle, color = green]
node689 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node690 [label= "KEYWORD(in)", shape = rectangle, color = green]
node700 [label= "atom_expr"]
node691 [label= "IDENTIFIER(range)", shape = rectangle, color = red]
node699 [label= "trailer"]
node692 [label= "DELIMITER(()", shape = rectangle, color = blue]
node698 [label= "arglist"]
node693 [label= "NUMBER(1)", shape = rectangle, color = pink]
node694 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node695 [label= "NUMBER(10)", shape = rectangle, color = pink]
node696 [label= "DELIMITER())", shape = rectangle, color = blue]
node701 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node761 [label= "if_stmt"]
node702 [label= "KEYWORD(if)", shape = rectangle, color = green]
node707 [label= "atom_expr"]
node703 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node706 [label= "trailer"]
node704 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node705 [label= "IDENTIFIER(check_location_is_safe)", shape = rectangle, color = red]
node719 [label= "trailer"]
node708 [label= "DELIMITER(()", shape = rectangle, color = blue]
node718 [label= "arglist"]
node709 [label= "IDENTIFIER(grid)", shape = rectangle, color = red]
node710 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node711 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node712 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node714 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node715 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node716 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node717 [label= "DELIMITER())", shape = rectangle, color = blue]
node720 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node749 [label= "stmts"]
node731 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node726 [label= "atom_expr"]
node721 [label= "IDENTIFIER(grid)", shape = rectangle, color = red]
node725 [label= "trailer"]
node722 [label= "DELIMITER([)", shape = rectangle, color = blue]
node723 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node724 [label= "DELIMITER(])", shape = rectangle, color = blue]
node730 [label= "trailer"]
node727 [label= "DELIMITER([)", shape = rectangle, color = blue]
node728 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node729 [label= "DELIMITER(])", shape = rectangle, color = blue]
node732 [label= "IDENTIFIER(num)", shape = rectangle, color = red]
node748 [label= "if_stmt"]
node733 [label= "KEYWORD(if)", shape = rectangle, color = green]
node738 [label= "atom_expr"]
node734 [label= "IDENTIFIER(self)", shape = rectangle, color = red]
node737 [label= "trailer"]
node735 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node736 [label= "IDENTIFIER(SolveSudoku)", shape = rectangle, color = red]
node742 [label= "trailer"]
node739 [label= "DELIMITER(()", shape = rectangle, color = blue]
node740 [label= "IDENTIFIER(grid)", shape = rectangle, color = red]
node741 [label= "DELIMITER())", shape = rectangle, color = blue]
node743 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node746 [label= "return_stmt"]
node744 [label= "KEYWORD(return)", shape = rectangle, color = green]
node745 [label= "KEYWORD(True)", shape = rectangle, color = green]
node759 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node754 [label= "atom_expr"]
node747 [label= "IDENTIFIER(grid)", shape = rectangle, color = red]
node753 [label= "trailer"]
node750 [label= "DELIMITER([)", shape = rectangle, color = blue]
node751 [label= "IDENTIFIER(row)", shape = rectangle, color = red]
node752 [label= "DELIMITER(])", shape = rectangle, color = blue]
node758 [label= "trailer"]
node755 [label= "DELIMITER([)", shape = rectangle, color = blue]
node756 [label= "IDENTIFIER(col)", shape = rectangle, color = red]
node757 [label= "DELIMITER(])", shape = rectangle, color = blue]
node760 [label= "NUMBER(0)", shape = rectangle, color = pink]
node765 [label= "return_stmt"]
node762 [label= "KEYWORD(return)", shape = rectangle, color = green]
node764 [label= "KEYWORD(False)", shape = rectangle, color = green]
node1053 [label= "funcdef"]
node768 [label= "KEYWORD(def)", shape = rectangle, color = green]
node769 [label= "IDENTIFIER(main)", shape = rectangle, color = red]
node772 [label= "parameters"]
node770 [label= "DELIMITER(()", shape = rectangle, color = blue]
node771 [label= "DELIMITER())", shape = rectangle, color = blue]
node776 [label= "return_type_hint"]
node773 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node774 [label= "KEYWORD(None)", shape = rectangle, color = green]
node775 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node1015 [label= "stmts"]
node1003 [label= "annassign"]
node777 [label= "IDENTIFIER(sudoku)", shape = rectangle, color = red]
node778 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node789 [label= "atom_expr"]
node779 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node788 [label= "trailer"]
node780 [label= "DELIMITER([)", shape = rectangle, color = blue]
node786 [label= "atom_expr"]
node781 [label= "DATA TYPE(list)", shape = rectangle, color = cyan]
node785 [label= "trailer"]
node782 [label= "DELIMITER([)", shape = rectangle, color = blue]
node783 [label= "DATA TYPE(int)", shape = rectangle, color = cyan]
node784 [label= "DELIMITER(])", shape = rectangle, color = blue]
node787 [label= "DELIMITER(])", shape = rectangle, color = blue]
node1002 [label= "param_val"]
node790 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node1001 [label= "atom"]
node791 [label= "DELIMITER([)", shape = rectangle, color = blue]
node1000 [label= "testlist_comp"]
node813 [label= "atom"]
node792 [label= "DELIMITER([)", shape = rectangle, color = blue]
node812 [label= "testlist_comp"]
node793 [label= "NUMBER(3)", shape = rectangle, color = pink]
node794 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node795 [label= "NUMBER(0)", shape = rectangle, color = pink]
node796 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node798 [label= "NUMBER(6)", shape = rectangle, color = pink]
node799 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node800 [label= "NUMBER(5)", shape = rectangle, color = pink]
node801 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node802 [label= "NUMBER(0)", shape = rectangle, color = pink]
node803 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node804 [label= "NUMBER(8)", shape = rectangle, color = pink]
node805 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node806 [label= "NUMBER(4)", shape = rectangle, color = pink]
node807 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node808 [label= "NUMBER(0)", shape = rectangle, color = pink]
node809 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node810 [label= "NUMBER(0)", shape = rectangle, color = pink]
node811 [label= "DELIMITER(])", shape = rectangle, color = blue]
node814 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node836 [label= "atom"]
node815 [label= "DELIMITER([)", shape = rectangle, color = blue]
node835 [label= "testlist_comp"]
node816 [label= "NUMBER(5)", shape = rectangle, color = pink]
node817 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node818 [label= "NUMBER(2)", shape = rectangle, color = pink]
node819 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node821 [label= "NUMBER(0)", shape = rectangle, color = pink]
node822 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node823 [label= "NUMBER(0)", shape = rectangle, color = pink]
node824 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node825 [label= "NUMBER(0)", shape = rectangle, color = pink]
node826 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node827 [label= "NUMBER(0)", shape = rectangle, color = pink]
node828 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node829 [label= "NUMBER(0)", shape = rectangle, color = pink]
node830 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node831 [label= "NUMBER(0)", shape = rectangle, color = pink]
node832 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node833 [label= "NUMBER(0)", shape = rectangle, color = pink]
node834 [label= "DELIMITER(])", shape = rectangle, color = blue]
node837 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node860 [label= "atom"]
node839 [label= "DELIMITER([)", shape = rectangle, color = blue]
node859 [label= "testlist_comp"]
node840 [label= "NUMBER(0)", shape = rectangle, color = pink]
node841 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node842 [label= "NUMBER(8)", shape = rectangle, color = pink]
node843 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node845 [label= "NUMBER(7)", shape = rectangle, color = pink]
node846 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node847 [label= "NUMBER(0)", shape = rectangle, color = pink]
node848 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node849 [label= "NUMBER(0)", shape = rectangle, color = pink]
node850 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node851 [label= "NUMBER(0)", shape = rectangle, color = pink]
node852 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node853 [label= "NUMBER(0)", shape = rectangle, color = pink]
node854 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node855 [label= "NUMBER(3)", shape = rectangle, color = pink]
node856 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node857 [label= "NUMBER(1)", shape = rectangle, color = pink]
node858 [label= "DELIMITER(])", shape = rectangle, color = blue]
node861 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node883 [label= "atom"]
node862 [label= "DELIMITER([)", shape = rectangle, color = blue]
node882 [label= "testlist_comp"]
node863 [label= "NUMBER(0)", shape = rectangle, color = pink]
node864 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node865 [label= "NUMBER(0)", shape = rectangle, color = pink]
node866 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node868 [label= "NUMBER(3)", shape = rectangle, color = pink]
node869 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node870 [label= "NUMBER(0)", shape = rectangle, color = pink]
node871 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node872 [label= "NUMBER(1)", shape = rectangle, color = pink]
node873 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node874 [label= "NUMBER(0)", shape = rectangle, color = pink]
node875 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node876 [label= "NUMBER(0)", shape = rectangle, color = pink]
node877 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node878 [label= "NUMBER(8)", shape = rectangle, color = pink]
node879 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node880 [label= "NUMBER(0)", shape = rectangle, color = pink]
node881 [label= "DELIMITER(])", shape = rectangle, color = blue]
node884 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node906 [label= "atom"]
node885 [label= "DELIMITER([)", shape = rectangle, color = blue]
node905 [label= "testlist_comp"]
node886 [label= "NUMBER(9)", shape = rectangle, color = pink]
node887 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node888 [label= "NUMBER(0)", shape = rectangle, color = pink]
node889 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node891 [label= "NUMBER(0)", shape = rectangle, color = pink]
node892 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node893 [label= "NUMBER(8)", shape = rectangle, color = pink]
node894 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node895 [label= "NUMBER(6)", shape = rectangle, color = pink]
node896 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node897 [label= "NUMBER(3)", shape = rectangle, color = pink]
node898 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node899 [label= "NUMBER(0)", shape = rectangle, color = pink]
node900 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node901 [label= "NUMBER(0)", shape = rectangle, color = pink]
node902 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node903 [label= "NUMBER(5)", shape = rectangle, color = pink]
node904 [label= "DELIMITER(])", shape = rectangle, color = blue]
node907 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node929 [label= "atom"]
node908 [label= "DELIMITER([)", shape = rectangle, color = blue]
node928 [label= "testlist_comp"]
node909 [label= "NUMBER(0)", shape = rectangle, color = pink]
node910 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node911 [label= "NUMBER(5)", shape = rectangle, color = pink]
node912 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node914 [label= "NUMBER(0)", shape = rectangle, color = pink]
node915 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node916 [label= "NUMBER(0)", shape = rectangle, color = pink]
node917 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node918 [label= "NUMBER(9)", shape = rectangle, color = pink]
node919 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node920 [label= "NUMBER(0)", shape = rectangle, color = pink]
node921 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node922 [label= "NUMBER(6)", shape = rectangle, color = pink]
node923 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node924 [label= "NUMBER(0)", shape = rectangle, color = pink]
node925 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node926 [label= "NUMBER(0)", shape = rectangle, color = pink]
node927 [label= "DELIMITER(])", shape = rectangle, color = blue]
node930 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node952 [label= "atom"]
node931 [label= "DELIMITER([)", shape = rectangle, color = blue]
node951 [label= "testlist_comp"]
node932 [label= "NUMBER(1)", shape = rectangle, color = pink]
node933 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node934 [label= "NUMBER(3)", shape = rectangle, color = pink]
node935 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node937 [label= "NUMBER(0)", shape = rectangle, color = pink]
node938 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node939 [label= "NUMBER(0)", shape = rectangle, color = pink]
node940 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node941 [label= "NUMBER(0)", shape = rectangle, color = pink]
node942 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node943 [label= "NUMBER(0)", shape = rectangle, color = pink]
node944 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node945 [label= "NUMBER(2)", shape = rectangle, color = pink]
node946 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node947 [label= "NUMBER(5)", shape = rectangle, color = pink]
node948 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node949 [label= "NUMBER(0)", shape = rectangle, color = pink]
node950 [label= "DELIMITER(])", shape = rectangle, color = blue]
node953 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node975 [label= "atom"]
node954 [label= "DELIMITER([)", shape = rectangle, color = blue]
node974 [label= "testlist_comp"]
node955 [label= "NUMBER(0)", shape = rectangle, color = pink]
node956 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node957 [label= "NUMBER(0)", shape = rectangle, color = pink]
node958 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node960 [label= "NUMBER(0)", shape = rectangle, color = pink]
node961 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node962 [label= "NUMBER(0)", shape = rectangle, color = pink]
node963 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node964 [label= "NUMBER(0)", shape = rectangle, color = pink]
node965 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node966 [label= "NUMBER(0)", shape = rectangle, color = pink]
node967 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node968 [label= "NUMBER(0)", shape = rectangle, color = pink]
node969 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node970 [label= "NUMBER(7)", shape = rectangle, color = pink]
node971 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node972 [label= "NUMBER(4)", shape = rectangle, color = pink]
node973 [label= "DELIMITER(])", shape = rectangle, color = blue]
node976 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node998 [label= "atom"]
node977 [label= "DELIMITER([)", shape = rectangle, color = blue]
node997 [label= "testlist_comp"]
node978 [label= "NUMBER(0)", shape = rectangle, color = pink]
node979 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node980 [label= "NUMBER(0)", shape = rectangle, color = pink]
node981 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node983 [label= "NUMBER(5)", shape = rectangle, color = pink]
node984 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node985 [label= "NUMBER(2)", shape = rectangle, color = pink]
node986 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node987 [label= "NUMBER(0)", shape = rectangle, color = pink]
node988 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node989 [label= "NUMBER(6)", shape = rectangle, color = pink]
node990 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node991 [label= "NUMBER(3)", shape = rectangle, color = pink]
node992 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node993 [label= "NUMBER(0)", shape = rectangle, color = pink]
node994 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node995 [label= "NUMBER(0)", shape = rectangle, color = pink]
node996 [label= "DELIMITER(])", shape = rectangle, color = blue]
node999 [label= "DELIMITER(])", shape = rectangle, color = blue]
node1014 [label= "annassign"]
node1004 [label= "IDENTIFIER(sol)", shape = rectangle, color = red]
node1005 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node1006 [label= "IDENTIFIER(Solution)", shape = rectangle, color = red]
node1013 [label= "param_val"]
node1007 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node1012 [label= "atom_expr"]
node1008 [label= "IDENTIFIER(Solution)", shape = rectangle, color = red]
node1011 [label= "trailer"]
node1009 [label= "DELIMITER(()", shape = rectangle, color = blue]
node1010 [label= "DELIMITER())", shape = rectangle, color = blue]
node1052 [label= "if_stmt"]
node1016 [label= "KEYWORD(if)", shape = rectangle, color = green]
node1021 [label= "atom_expr"]
node1017 [label= "IDENTIFIER(sol)", shape = rectangle, color = red]
node1020 [label= "trailer"]
node1018 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node1019 [label= "IDENTIFIER(SolveSudoku)", shape = rectangle, color = red]
node1025 [label= "trailer"]
node1022 [label= "DELIMITER(()", shape = rectangle, color = blue]
node1023 [label= "IDENTIFIER(sudoku)", shape = rectangle, color = red]
node1024 [label= "DELIMITER())", shape = rectangle, color = blue]
node1026 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node1042 [label= "stmts"]
node1032 [label= "atom_expr"]
node1027 [label= "IDENTIFIER(print)", shape = rectangle, color = red]
node1031 [label= "trailer"]
node1028 [label= "DELIMITER(()", shape = rectangle, color = blue]
node1029 [label= "STRING_LITERAL(\"Solution found\:\")", shape = rectangle, color = orange]
node1030 [label= "DELIMITER())", shape = rectangle, color = blue]
node1037 [label= "atom_expr"]
node1033 [label= "IDENTIFIER(sol)", shape = rectangle, color = red]
node1036 [label= "trailer"]
node1034 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node1035 [label= "IDENTIFIER(printGrid)", shape = rectangle, color = red]
node1041 [label= "trailer"]
node1038 [label= "DELIMITER(()", shape = rectangle, color = blue]
node1039 [label= "IDENTIFIER(sudoku)", shape = rectangle, color = red]
node1040 [label= "DELIMITER())", shape = rectangle, color = blue]
node1051 [label= "ELSE_block"]
node1043 [label= "KEYWORD(else)", shape = rectangle, color = green]
node1044 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node1050 [label= "atom_expr"]
node1045 [label= "IDENTIFIER(print)", shape = rectangle, color = red]
node1049 [label= "trailer"]
node1046 [label= "DELIMITER(()", shape = rectangle, color = blue]
node1047 [label= "STRING_LITERAL(\"No solution exists.\")", shape = rectangle, color = orange]
node1048 [label= "DELIMITER())", shape = rectangle, color = blue]
node1064 [label= "if_stmt"]
node1054 [label= "KEYWORD(if)", shape = rectangle, color = green]
node1056 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node1055 [label= "IDENTIFIER(__name__)", shape = rectangle, color = red]
node1057 [label= "STRING_LITERAL(\"__main__\")", shape = rectangle, color = orange]
node1058 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node1063 [label= "atom_expr"]
node1059 [label= "IDENTIFIER(main)", shape = rectangle, color = red]
node1062 [label= "trailer"]
node1060 [label= "DELIMITER(()", shape = rectangle, color = blue]
node1061 [label= "DELIMITER())", shape = rectangle, color = blue]
node1 -> node767;
node767 -> node2;
node767 -> node3;
node767 -> node4;
node767 -> node108;
node108 -> node24;
node24 -> node5;
node24 -> node6;
node24 -> node11;
node11 -> node7;
node11 -> node10;
node10 -> node8;
node11 -> node9;
node24 -> node12;
node24 -> node23;
node23 -> node17;
node17 -> node13;
node17 -> node16;
node16 -> node14;
node16 -> node15;
node23 -> node18;
node23 -> node19;
node23 -> node22;
node22 -> node20;
node22 -> node21;
node108 -> node107;
node107 -> node25;
node107 -> node26;
node107 -> node49;
node49 -> node27;
node49 -> node48;
node48 -> node30;
node30 -> node28;
node48 -> node29;
node48 -> node46;
node46 -> node31;
node46 -> node45;
node45 -> node32;
node45 -> node43;
node43 -> node33;
node43 -> node42;
node42 -> node34;
node42 -> node40;
node40 -> node35;
node40 -> node39;
node39 -> node36;
node39 -> node37;
node39 -> node38;
node42 -> node41;
node49 -> node44;
node107 -> node53;
node53 -> node50;
node53 -> node51;
node107 -> node52;
node107 -> node62;
node62 -> node57;
node57 -> node54;
node57 -> node55;
node57 -> node56;
node62 -> node61;
node61 -> node58;
node61 -> node59;
node61 -> node60;
node62 -> node106;
node106 -> node63;
node106 -> node64;
node106 -> node65;
node106 -> node71;
node71 -> node66;
node71 -> node70;
node70 -> node67;
node70 -> node68;
node70 -> node69;
node106 -> node72;
node106 -> node105;
node105 -> node99;
node99 -> node73;
node99 -> node74;
node99 -> node75;
node99 -> node81;
node81 -> node76;
node81 -> node80;
node80 -> node77;
node80 -> node78;
node80 -> node79;
node99 -> node82;
node99 -> node97;
node97 -> node83;
node97 -> node96;
node96 -> node84;
node96 -> node90;
node90 -> node85;
node90 -> node89;
node89 -> node86;
node89 -> node87;
node89 -> node88;
node90 -> node94;
node94 -> node91;
node94 -> node92;
node94 -> node93;
node96 -> node95;
node105 -> node104;
node104 -> node98;
node104 -> node103;
node103 -> node100;
node103 -> node101;
node103 -> node102;
node108 -> node187;
node187 -> node109;
node187 -> node110;
node187 -> node145;
node145 -> node111;
node145 -> node144;
node144 -> node114;
node114 -> node112;
node144 -> node113;
node144 -> node130;
node130 -> node115;
node130 -> node129;
node129 -> node116;
node129 -> node127;
node127 -> node117;
node127 -> node126;
node126 -> node118;
node126 -> node124;
node124 -> node119;
node124 -> node123;
node123 -> node120;
node123 -> node121;
node123 -> node122;
node126 -> node125;
node144 -> node128;
node144 -> node137;
node137 -> node132;
node137 -> node136;
node136 -> node133;
node136 -> node134;
node144 -> node135;
node144 -> node143;
node143 -> node138;
node143 -> node142;
node142 -> node139;
node142 -> node140;
node145 -> node141;
node187 -> node149;
node149 -> node146;
node149 -> node147;
node187 -> node148;
node187 -> node184;
node184 -> node153;
node153 -> node150;
node153 -> node151;
node153 -> node152;
node184 -> node183;
node183 -> node154;
node183 -> node155;
node183 -> node156;
node183 -> node162;
node162 -> node157;
node162 -> node161;
node161 -> node158;
node161 -> node159;
node161 -> node160;
node183 -> node163;
node183 -> node181;
node181 -> node164;
node181 -> node175;
node175 -> node170;
node170 -> node165;
node170 -> node169;
node169 -> node166;
node169 -> node167;
node169 -> node168;
node170 -> node174;
node174 -> node171;
node174 -> node172;
node174 -> node173;
node175 -> node176;
node181 -> node177;
node181 -> node180;
node180 -> node178;
node180 -> node179;
node184 -> node186;
node186 -> node182;
node186 -> node185;
node108 -> node266;
node266 -> node188;
node266 -> node189;
node266 -> node224;
node224 -> node190;
node224 -> node223;
node223 -> node193;
node193 -> node191;
node223 -> node192;
node223 -> node209;
node209 -> node194;
node209 -> node208;
node208 -> node195;
node208 -> node206;
node206 -> node196;
node206 -> node205;
node205 -> node197;
node205 -> node203;
node203 -> node198;
node203 -> node202;
node202 -> node199;
node202 -> node200;
node202 -> node201;
node205 -> node204;
node223 -> node207;
node223 -> node216;
node216 -> node211;
node216 -> node215;
node215 -> node212;
node215 -> node213;
node223 -> node214;
node223 -> node222;
node222 -> node217;
node222 -> node221;
node221 -> node218;
node221 -> node219;
node224 -> node220;
node266 -> node228;
node228 -> node225;
node228 -> node226;
node266 -> node227;
node266 -> node263;
node263 -> node232;
node232 -> node229;
node232 -> node230;
node232 -> node231;
node263 -> node262;
node262 -> node233;
node262 -> node234;
node262 -> node235;
node262 -> node241;
node241 -> node236;
node241 -> node240;
node240 -> node237;
node240 -> node238;
node240 -> node239;
node262 -> node242;
node262 -> node260;
node260 -> node243;
node260 -> node254;
node254 -> node249;
node249 -> node244;
node249 -> node248;
node248 -> node245;
node248 -> node246;
node248 -> node247;
node249 -> node253;
node253 -> node250;
node253 -> node251;
node253 -> node252;
node254 -> node255;
node260 -> node256;
node260 -> node259;
node259 -> node257;
node259 -> node258;
node263 -> node265;
node265 -> node261;
node265 -> node264;
node108 -> node370;
node370 -> node267;
node370 -> node268;
node370 -> node309;
node309 -> node269;
node309 -> node308;
node308 -> node272;
node272 -> node270;
node308 -> node271;
node308 -> node288;
node288 -> node273;
node288 -> node287;
node287 -> node274;
node287 -> node285;
node285 -> node275;
node285 -> node284;
node284 -> node276;
node284 -> node282;
node282 -> node277;
node282 -> node281;
node281 -> node278;
node281 -> node279;
node281 -> node280;
node284 -> node283;
node308 -> node286;
node308 -> node295;
node295 -> node290;
node295 -> node294;
node294 -> node291;
node294 -> node292;
node308 -> node293;
node308 -> node301;
node301 -> node296;
node301 -> node300;
node300 -> node297;
node300 -> node298;
node308 -> node299;
node308 -> node307;
node307 -> node302;
node307 -> node306;
node306 -> node303;
node306 -> node304;
node309 -> node305;
node370 -> node313;
node313 -> node310;
node313 -> node311;
node370 -> node312;
node370 -> node322;
node322 -> node317;
node317 -> node314;
node317 -> node315;
node317 -> node316;
node322 -> node321;
node321 -> node318;
node321 -> node319;
node321 -> node320;
node322 -> node367;
node367 -> node323;
node367 -> node324;
node367 -> node325;
node367 -> node331;
node331 -> node326;
node331 -> node330;
node330 -> node327;
node330 -> node328;
node330 -> node329;
node367 -> node332;
node367 -> node365;
node365 -> node333;
node365 -> node334;
node365 -> node335;
node365 -> node341;
node341 -> node336;
node341 -> node340;
node340 -> node337;
node340 -> node338;
node340 -> node339;
node365 -> node342;
node365 -> node364;
node364 -> node343;
node364 -> node358;
node358 -> node351;
node351 -> node344;
node351 -> node350;
node350 -> node345;
node350 -> node347;
node347 -> node346;
node347 -> node348;
node350 -> node349;
node351 -> node357;
node357 -> node352;
node357 -> node354;
node354 -> node353;
node354 -> node355;
node357 -> node356;
node358 -> node359;
node364 -> node360;
node364 -> node363;
node363 -> node361;
node363 -> node362;
node322 -> node369;
node369 -> node366;
node369 -> node368;
node108 -> node480;
node480 -> node371;
node480 -> node372;
node480 -> node413;
node413 -> node373;
node413 -> node412;
node412 -> node376;
node376 -> node374;
node412 -> node375;
node412 -> node392;
node392 -> node377;
node392 -> node391;
node391 -> node378;
node391 -> node389;
node389 -> node379;
node389 -> node388;
node388 -> node380;
node388 -> node386;
node386 -> node381;
node386 -> node385;
node385 -> node382;
node385 -> node383;
node385 -> node384;
node388 -> node387;
node412 -> node390;
node412 -> node399;
node399 -> node394;
node399 -> node398;
node398 -> node395;
node398 -> node396;
node412 -> node397;
node412 -> node405;
node405 -> node400;
node405 -> node404;
node404 -> node401;
node404 -> node402;
node412 -> node403;
node412 -> node411;
node411 -> node406;
node411 -> node410;
node410 -> node407;
node410 -> node408;
node413 -> node409;
node480 -> node417;
node417 -> node414;
node417 -> node415;
node480 -> node416;
node480 -> node479;
node479 -> node418;
node479 -> node452;
node452 -> node435;
node435 -> node419;
node419 -> node424;
node424 -> node420;
node424 -> node423;
node423 -> node421;
node423 -> node422;
node424 -> node434;
node434 -> node425;
node434 -> node433;
node433 -> node426;
node433 -> node427;
node433 -> node428;
node433 -> node429;
node433 -> node431;
node434 -> node432;
node435 -> node436;
node436 -> node441;
node441 -> node437;
node441 -> node440;
node440 -> node438;
node440 -> node439;
node441 -> node451;
node451 -> node442;
node451 -> node450;
node450 -> node443;
node450 -> node444;
node450 -> node445;
node450 -> node446;
node450 -> node448;
node451 -> node449;
node452 -> node453;
node453 -> node458;
node458 -> node454;
node458 -> node457;
node457 -> node455;
node457 -> node456;
node458 -> node478;
node478 -> node459;
node478 -> node477;
node477 -> node460;
node477 -> node461;
node477 -> node463;
node463 -> node462;
node463 -> node465;
node465 -> node464;
node465 -> node466;
node477 -> node467;
node477 -> node470;
node470 -> node469;
node470 -> node472;
node472 -> node471;
node472 -> node473;
node477 -> node474;
node477 -> node475;
node478 -> node476;
node108 -> node590;
node590 -> node481;
node590 -> node482;
node590 -> node516;
node516 -> node483;
node516 -> node515;
node515 -> node486;
node486 -> node484;
node515 -> node485;
node515 -> node502;
node502 -> node487;
node502 -> node501;
node501 -> node488;
node501 -> node499;
node499 -> node489;
node499 -> node498;
node498 -> node490;
node498 -> node496;
node496 -> node491;
node496 -> node495;
node495 -> node492;
node495 -> node493;
node495 -> node494;
node498 -> node497;
node515 -> node500;
node515 -> node514;
node514 -> node504;
node514 -> node513;
node513 -> node505;
node513 -> node511;
node511 -> node506;
node511 -> node510;
node510 -> node507;
node510 -> node508;
node510 -> node509;
node516 -> node512;
node590 -> node520;
node520 -> node517;
node520 -> node518;
node590 -> node519;
node590 -> node529;
node529 -> node524;
node524 -> node521;
node524 -> node522;
node524 -> node523;
node529 -> node528;
node528 -> node525;
node528 -> node526;
node528 -> node527;
node529 -> node587;
node587 -> node530;
node587 -> node531;
node587 -> node532;
node587 -> node538;
node538 -> node533;
node538 -> node537;
node537 -> node534;
node537 -> node535;
node537 -> node536;
node587 -> node539;
node587 -> node585;
node585 -> node540;
node585 -> node541;
node585 -> node542;
node585 -> node548;
node548 -> node543;
node548 -> node547;
node547 -> node544;
node547 -> node545;
node547 -> node546;
node585 -> node549;
node585 -> node584;
node584 -> node550;
node584 -> node561;
node561 -> node556;
node556 -> node551;
node556 -> node555;
node555 -> node552;
node555 -> node553;
node555 -> node554;
node556 -> node560;
node560 -> node557;
node560 -> node558;
node560 -> node559;
node561 -> node562;
node584 -> node563;
node584 -> node580;
node580 -> node570;
node570 -> node569;
node569 -> node564;
node569 -> node568;
node568 -> node565;
node568 -> node566;
node568 -> node567;
node570 -> node571;
node580 -> node578;
node578 -> node577;
node577 -> node572;
node577 -> node576;
node576 -> node573;
node576 -> node574;
node576 -> node575;
node578 -> node579;
node580 -> node583;
node583 -> node581;
node583 -> node582;
node529 -> node589;
node589 -> node586;
node589 -> node588;
node108 -> node766;
node766 -> node591;
node766 -> node592;
node766 -> node615;
node615 -> node593;
node615 -> node614;
node614 -> node596;
node596 -> node594;
node614 -> node595;
node614 -> node612;
node612 -> node597;
node612 -> node611;
node611 -> node598;
node611 -> node609;
node609 -> node599;
node609 -> node608;
node608 -> node600;
node608 -> node606;
node606 -> node601;
node606 -> node605;
node605 -> node602;
node605 -> node603;
node605 -> node604;
node608 -> node607;
node615 -> node610;
node766 -> node619;
node619 -> node616;
node619 -> node617;
node766 -> node618;
node766 -> node660;
node660 -> node638;
node638 -> node620;
node638 -> node621;
node638 -> node627;
node627 -> node622;
node627 -> node626;
node626 -> node623;
node626 -> node624;
node626 -> node625;
node638 -> node637;
node637 -> node628;
node637 -> node636;
node636 -> node629;
node636 -> node635;
node635 -> node630;
node635 -> node631;
node635 -> node632;
node636 -> node633;
node660 -> node659;
node659 -> node639;
node659 -> node640;
node640 -> node645;
node645 -> node641;
node645 -> node644;
node644 -> node642;
node644 -> node643;
node645 -> node653;
node653 -> node646;
node653 -> node652;
node652 -> node647;
node652 -> node648;
node652 -> node649;
node653 -> node650;
node659 -> node654;
node659 -> node657;
node657 -> node655;
node657 -> node656;
node660 -> node671;
node671 -> node658;
node671 -> node661;
node671 -> node662;
node671 -> node670;
node670 -> node663;
node670 -> node669;
node669 -> node664;
node669 -> node668;
node668 -> node665;
node668 -> node666;
node668 -> node667;
node660 -> node683;
node683 -> node672;
node683 -> node673;
node683 -> node674;
node683 -> node682;
node682 -> node675;
node682 -> node681;
node681 -> node676;
node681 -> node680;
node680 -> node677;
node680 -> node678;
node680 -> node679;
node660 -> node687;
node687 -> node684;
node687 -> node685;
node687 -> node686;
node660 -> node763;
node763 -> node688;
node763 -> node689;
node763 -> node690;
node763 -> node700;
node700 -> node691;
node700 -> node699;
node699 -> node692;
node699 -> node698;
node698 -> node693;
node698 -> node694;
node698 -> node695;
node699 -> node696;
node763 -> node701;
node763 -> node761;
node761 -> node702;
node761 -> node707;
node707 -> node703;
node707 -> node706;
node706 -> node704;
node706 -> node705;
node707 -> node719;
node719 -> node708;
node719 -> node718;
node718 -> node709;
node718 -> node710;
node718 -> node711;
node718 -> node712;
node718 -> node714;
node718 -> node715;
node718 -> node716;
node719 -> node717;
node761 -> node720;
node761 -> node749;
node749 -> node731;
node731 -> node726;
node726 -> node721;
node726 -> node725;
node725 -> node722;
node725 -> node723;
node725 -> node724;
node726 -> node730;
node730 -> node727;
node730 -> node728;
node730 -> node729;
node731 -> node732;
node749 -> node748;
node748 -> node733;
node748 -> node738;
node738 -> node734;
node738 -> node737;
node737 -> node735;
node737 -> node736;
node738 -> node742;
node742 -> node739;
node742 -> node740;
node742 -> node741;
node748 -> node743;
node748 -> node746;
node746 -> node744;
node746 -> node745;
node749 -> node759;
node759 -> node754;
node754 -> node747;
node754 -> node753;
node753 -> node750;
node753 -> node751;
node753 -> node752;
node754 -> node758;
node758 -> node755;
node758 -> node756;
node758 -> node757;
node759 -> node760;
node660 -> node765;
node765 -> node762;
node765 -> node764;
node1 -> node1053;
node1053 -> node768;
node1053 -> node769;
node1053 -> node772;
node772 -> node770;
node772 -> node771;
node1053 -> node776;
node776 -> node773;
node776 -> node774;
node1053 -> node775;
node1053 -> node1015;
node1015 -> node1003;
node1003 -> node777;
node1003 -> node778;
node1003 -> node789;
node789 -> node779;
node789 -> node788;
node788 -> node780;
node788 -> node786;
node786 -> node781;
node786 -> node785;
node785 -> node782;
node785 -> node783;
node785 -> node784;
node788 -> node787;
node1003 -> node1002;
node1002 -> node790;
node1002 -> node1001;
node1001 -> node791;
node1001 -> node1000;
node1000 -> node813;
node813 -> node792;
node813 -> node812;
node812 -> node793;
node812 -> node794;
node812 -> node795;
node812 -> node796;
node812 -> node798;
node812 -> node799;
node812 -> node800;
node812 -> node801;
node812 -> node802;
node812 -> node803;
node812 -> node804;
node812 -> node805;
node812 -> node806;
node812 -> node807;
node812 -> node808;
node812 -> node809;
node812 -> node810;
node813 -> node811;
node1000 -> node814;
node1000 -> node836;
node836 -> node815;
node836 -> node835;
node835 -> node816;
node835 -> node817;
node835 -> node818;
node835 -> node819;
node835 -> node821;
node835 -> node822;
node835 -> node823;
node835 -> node824;
node835 -> node825;
node835 -> node826;
node835 -> node827;
node835 -> node828;
node835 -> node829;
node835 -> node830;
node835 -> node831;
node835 -> node832;
node835 -> node833;
node836 -> node834;
node1000 -> node837;
node1000 -> node860;
node860 -> node839;
node860 -> node859;
node859 -> node840;
node859 -> node841;
node859 -> node842;
node859 -> node843;
node859 -> node845;
node859 -> node846;
node859 -> node847;
node859 -> node848;
node859 -> node849;
node859 -> node850;
node859 -> node851;
node859 -> node852;
node859 -> node853;
node859 -> node854;
node859 -> node855;
node859 -> node856;
node859 -> node857;
node860 -> node858;
node1000 -> node861;
node1000 -> node883;
node883 -> node862;
node883 -> node882;
node882 -> node863;
node882 -> node864;
node882 -> node865;
node882 -> node866;
node882 -> node868;
node882 -> node869;
node882 -> node870;
node882 -> node871;
node882 -> node872;
node882 -> node873;
node882 -> node874;
node882 -> node875;
node882 -> node876;
node882 -> node877;
node882 -> node878;
node882 -> node879;
node882 -> node880;
node883 -> node881;
node1000 -> node884;
node1000 -> node906;
node906 -> node885;
node906 -> node905;
node905 -> node886;
node905 -> node887;
node905 -> node888;
node905 -> node889;
node905 -> node891;
node905 -> node892;
node905 -> node893;
node905 -> node894;
node905 -> node895;
node905 -> node896;
node905 -> node897;
node905 -> node898;
node905 -> node899;
node905 -> node900;
node905 -> node901;
node905 -> node902;
node905 -> node903;
node906 -> node904;
node1000 -> node907;
node1000 -> node929;
node929 -> node908;
node929 -> node928;
node928 -> node909;
node928 -> node910;
node928 -> node911;
node928 -> node912;
node928 -> node914;
node928 -> node915;
node928 -> node916;
node928 -> node917;
node928 -> node918;
node928 -> node919;
node928 -> node920;
node928 -> node921;
node928 -> node922;
node928 -> node923;
node928 -> node924;
node928 -> node925;
node928 -> node926;
node929 -> node927;
node1000 -> node930;
node1000 -> node952;
node952 -> node931;
node952 -> node951;
node951 -> node932;
node951 -> node933;
node951 -> node934;
node951 -> node935;
node951 -> node937;
node951 -> node938;
node951 -> node939;
node951 -> node940;
node951 -> node941;
node951 -> node942;
node951 -> node943;
node951 -> node944;
node951 -> node945;
node951 -> node946;
node951 -> node947;
node951 -> node948;
node951 -> node949;
node952 -> node950;
node1000 -> node953;
node1000 -> node975;
node975 -> node954;
node975 -> node974;
node974 -> node955;
node974 -> node956;
node974 -> node957;
node974 -> node958;
node974 -> node960;
node974 -> node961;
node974 -> node962;
node974 -> node963;
node974 -> node964;
node974 -> node965;
node974 -> node966;
node974 -> node967;
node974 -> node968;
node974 -> node969;
node974 -> node970;
node974 -> node971;
node974 -> node972;
node975 -> node973;
node1000 -> node976;
node1000 -> node998;
node998 -> node977;
node998 -> node997;
node997 -> node978;
node997 -> node979;
node997 -> node980;
node997 -> node981;
node997 -> node983;
node997 -> node984;
node997 -> node985;
node997 -> node986;
node997 -> node987;
node997 -> node988;
node997 -> node989;
node997 -> node990;
node997 -> node991;
node997 -> node992;
node997 -> node993;
node997 -> node994;
node997 -> node995;
node998 -> node996;
node1001 -> node999;
node1015 -> node1014;
node1014 -> node1004;
node1014 -> node1005;
node1014 -> node1006;
node1014 -> node1013;
node1013 -> node1007;
node1013 -> node1012;
node1012 -> node1008;
node1012 -> node1011;
node1011 -> node1009;
node1011 -> node1010;
node1015 -> node1052;
node1052 -> node1016;
node1052 -> node1021;
node1021 -> node1017;
node1021 -> node1020;
node1020 -> node1018;
node1020 -> node1019;
node1021 -> node1025;
node1025 -> node1022;
node1025 -> node1023;
node1025 -> node1024;
node1052 -> node1026;
node1052 -> node1042;
node1042 -> node1032;
node1032 -> node1027;
node1032 -> node1031;
node1031 -> node1028;
node1031 -> node1029;
node1031 -> node1030;
node1042 -> node1037;
node1037 -> node1033;
node1037 -> node1036;
node1036 -> node1034;
node1036 -> node1035;
node1037 -> node1041;
node1041 -> node1038;
node1041 -> node1039;
node1041 -> node1040;
node1052 -> node1051;
node1051 -> node1043;
node1051 -> node1044;
node1051 -> node1050;
node1050 -> node1045;
node1050 -> node1049;
node1049 -> node1046;
node1049 -> node1047;
node1049 -> node1048;
node1 -> node1064;
node1064 -> node1054;
node1064 -> node1056;
node1056 -> node1055;
node1056 -> node1057;
node1064 -> node1058;
node1064 -> node1063;
node1063 -> node1059;
node1063 -> node1062;
node1062 -> node1060;
node1062 -> node1061;
}
